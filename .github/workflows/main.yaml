name: CI

on: push

jobs:
  log-variable:
    runs-on: ubuntu-latest
    outputs:
      failures: ${{ steps.set-variable.outputs.fail_count }}
      report: ${{ steps.set-variable.outputs.fail_report }}
      report_1: ${{ steps.set-variable.outputs.fail_report_1 }}
      report_2: ${{ steps.set-variable.outputs.fail_report_2 }}
      dashboardUrl: ""

    steps:
      - uses: actions/checkout@v2
      
      - name: Set cypress
        id: cypress
        run: |
          echo "cypress_dashboard_url=http://localhost:8080/run/3c61e3d372148c4e111de3b9ce097729" >> $GITHUB_ENV
      
      - name: Set env
        id: set-env
        run: |
          echo "cypress_url=${{ steps.cypress.outputs.cypress_dashboard_url }}" >> $GITHUB_ENV

      - name: Set variable
        id: set-variable
        run: |
          #!/bin/bash

          set -eu

          # Use this env var to represent workspace dir on CI
          GITHUB_WORKSPACE=${GITHUB_WORKSPACE:-}

          # use this instead to represent workspace dir for local environment
          if [ "${GITHUB_WORKSPACE}" == "" ]; then
            BASE_DIR=$(cd $(dirname $0)/../..; pwd)
          else
            BASE_DIR="${GITHUB_WORKSPACE}"
          fi

          echo "$cypress_link cypress link"

          REPORT_DIR="${BASE_DIR}"
          REPORT_FILE="index.json"

          # make sure report dir exists
          mkdir -p "${REPORT_DIR}"
          touch "${REPORT_DIR}/${REPORT_FILE}"

          function generate_report(){
            local full_report=""
            local limit=3
            local fail_results=`cat ${REPORT_FILE} | jq -r '[.results[].suites[].tests[] | select(.fail)']`
            local total_fails=$(echo "${fail_results}" | jq '. | length')
            local cypress_run_id=$(echo "${cypress_link}" | sed 's:.*/::')

            for result in $(echo "${fail_results}" | jq -r '.[] | @base64'); do
              _jq() {
                echo ${result} | base64 --decode | jq -r ${1}
              }

              title=$(_jq '.title')
              parent_id=$(_jq '.parentUUID')
              file=`cat ${REPORT_FILE} | jq --arg parent_ref ${parent_id} '.results[].suites[] | select(.uuid == $parent_ref) | .fullFile'`
              message=$(_jq '.err.message')
              echo "$message ++MESSAGE"
              report=$(echo ":test_tube:*TEST*: $title \n:open_file_folder:*FILE*: <https://cypress-dashboard.staging.manabie.io:31600/run/$cypress_run_id | $file> \n:speech_balloon:*MESSAGE*: $message \n\n")
              full_report+="$report"

              if [[ $limit -eq 1 ]]; then
                full_report+="Showing 3 out of ${total_fails} test fails..."
              fi

              full_report=$(echo ${full_report//$'\n'/'%0A'} | sed 's/"//g')

              if [[ $limit -eq 0 ]]; then
                break
              fi

              echo "::set-output name=fail_count::$total_fails"
              echo "::set-output name=fail_report::$full_report"

              ((limit--))
            done
          }

          pushd "${REPORT_DIR}"
            generate_report
          popd 
        env:
          cypress_link: "http://localhost:8080/run/3c61e3d372148c4e111de3b9ce097729"
          
      - name: Check report
        id: check-report
        run: |
          echo "${{ steps.set-variable.outputs.fail_report }} - +++FAILURESSS"
          
  slack-reporter:
    runs-on: ubuntu-latest
    needs:
      - log-variable

    steps:
      - uses: actions/checkout@v2
    
      - name: Check variable
        id: check-variable
        run: |
          echo $PWD
          echo "${{ needs.log-variable.outputs.failures }} - +++FAILURESSS"
          echo "${{ needs.log-variable.outputs.report }} - +++REPORT"
          echo "${{ needs.log-variable.outputs.report_1 }} - +++REPORT 1"
          echo "${{ needs.log-variable.outputs.report_2 }} - +++REPORT 2"
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=pull-request-number::"${pull_number}""
      - name: Send slack notication report for failed integration tests
        id: slack-notif-failed-integration-tests
        uses: slackapi/slack-github-action@v1.18.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          # For posting a rich message using Block Kit
          payload: |
              {
                  "blocks": [
                      {
                          "type": "section",
                          "text": {
                          "type": "mrkdwn",
                          "text": ":warning: *Oops!* Found ${{ needs.log-variable.outputs.failures }} test fails in INTEGRATION TEST (${{ matrix.containers }}) in pull request workflow. :pleading_face:"
                          }
                      },
                      {
                          "type": "divider"
                      },
                      {
                          "type": "context",
                          "elements": [
                              {
                                  "type": "mrkdwn",
                                  "text": ":technologist::skin-tone-2: *Commit by* ${{ github.event.pull_request.user.login }} from Pull Request: *<${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.get-pr-details.outputs.pull-request-number }}|${{ github.event.pull_request.title }}>*"
                              }
                          ]
                      }
                      ],
                      "attachments": [
                          {
                              "color": "#FF0000",
                              "blocks": [
                                  {
                                      "type": "section",
                                      "text": {
                                      "type": "mrkdwn",
                                      "text": "Please check this out. :pray:"
                                      }
                                  },
                              {
                                  "type": "context",
                                  "elements": [
                                      {
                                          "type": "mrkdwn",
                                          "text": "${{ needs.log-variable.outputs.report }}"
                                      }
                                  ]
                              },
                              {
                                  "type": "divider"
                              },
                              {
                                  "type": "context",
                                  "elements": [
                                      {
                                          "type": "mrkdwn",
                                          "text": "more info: <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}|from commit> | <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|from workflow> | <https://cypress-dashboard.staging.manabie.io:31600/SchoolPortal/runs|cypress dashboard>"
                                      }
                                  ]
                              }
                          ]
                      }
                  ]
              }

